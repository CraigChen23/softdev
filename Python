def sleep_in(weekday, vacation):
  if weekday == True and vacation == False:
    return False
  else:
    return True
    
def monkey_trouble(a_smile, b_smile):
    return a_smile == b_smile
    
def sum_double(a, b):
  if a == b:
    return 2*(a+b)
  else:
    return (a+b)
    
def diff21(n):
  dif = abs(n-21) 
  if n > 21:
    return 2 * dif
  return dif

def parrot_trouble(talking, hour):
    return talking and (hour < 7 or hour > 20)

def makes10(a, b):
    return a==10 or b==10 or a+b == 10

def near_hundred(n):
  return 90 <= n <= 110 or 190 <= n <= 210

def pos_neg(a, b, negative):
    if negative:
        return a < 0 and b < 0
    else:
        return a * b < 0

def not_string(str):
  if 'not' == str[:3]:
    return str
  else:
    return 'not ' + str

def missing_char(str, n):
  return str[:n] + str[n+1:]

def front_back(str):
  if len(str) <= 1:
    return str
  return str[-1] + str[1:len(str)-1] + str[0]
  
def front3(str):
  return 3 * str[:3]

def string_times(str, n):
  return n*str

def front_times(str, n):
  return n*str[:3]
  
def string_bits(str):
  return str[::2]
  
def string_splosion(str):
  result = ""
  for i in range(len(str)+1):
    result += str[:i]
  return result

def last2(str):
  count = 0
  last2 = str[-2:]
  for i in range(len(str)-2):
    if str[i:i+2] == last2:
      count += 1
  return count

def array_count9(nums):
  count = 0
  for i in nums:
    if i == 9:
      count += 1
  return count

def array_front9(nums):
  for i in nums[:4]:
    if i == 9:
      return True
  return False

def array123(nums):
  for i in range(len(nums)-2):
    if nums[i:i+3] == [1,2,3]:
      return True
  return False

def string_match(a, b):
  minilength = min(len(a),len(b))
  count = 0
  for i in range(minilength-1):
    if a[i:i+2] == b[i:i+2]:
      count += 1
  return count

